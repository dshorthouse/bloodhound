-content_for :title do
  Bloodhound: Profile

-content_for :scripts do
  %script{src:"/js/application.js"}
  :javascript
    $(function() {
        Application.init(#{@user[:id]});
    });

-content_for :jumbotron do
  = haml :'partials/profile_jumbotron', layout: false

= haml :'partials/profile_tabs', layout: false, locals: { active_page: "profile" }

%div{class: "alert alert-info row", role: "alert", style:"margin-left:0.1em;margin-right:0.1em"}
  = succeed "." do
    Collected #{number_with_delimiter(@total[:number_recorded])} and identified #{number_with_delimiter(@total[:number_identified])} specimens
    - if @total[:number_helped] > 0
      and helped #{number_with_delimiter(@total[:number_helped])} #{'user'.pluralize(@total[:number_helped])} claim a total of #{number_with_delimiter(@total[:number_claims_given])} #{'specimen'.pluralize(@total[:number_claims_given])}

- if @total[:number_helped] > 0
  %h2 Users Helped

  - @helped.in_groups_of(3).each do |group|
    %div{class: "row"}
      - group.each do |u|
        %div{class: "col-sm"}
          - if !u.nil?
            %div{class: "card", style:"margin:20px"}
              %h5{class: "card-header"}
                %a{href: "/help-user/#{u[:orcid]}"} #{u[:user].fullname_reverse}
              %div{class: "card-body"}
                %div{class: "row"}
                  %div{class: "col-sm small text-left text-muted"} #{u[:user].country}
                  %div{class: "col-sm small text-right text-muted"}
                    %span{class:"badge badge-success"} #{number_with_delimiter(u[:count])}
                    claims
  
